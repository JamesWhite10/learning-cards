{"version":3,"sources":["Main/Header/Header.module.css","Login/Login.module.css","Registration/Registration.module.css"," PasswordRecovery/PasswordRecovery.module.css","NikComponents/MyTextInput.module.css","common/InputContainer/InputContainer.module.css","HomemadeInpButCheck/common/c3-SuperCheckbox/SuperCheckbox.module.css","common/MainActionButton/MainActionButton.module.css","common/Preloader/Preloader.module.css","common/HeaderEnterApp/HeaderEnterApp.module.css","Test/Test.tsx","Main/Error404.tsx","api/api.ts","Registration/registration-reducer.ts","Login/login-reducer.ts","Profile/Profile.tsx","common/InputContainer/InputContainer.tsx","media/loadings/loadingBtn.svg","common/Preloader/Preloader.tsx","common/MainActionButton/MainActionButton.tsx","HomemadeInpButCheck/common/c3-SuperCheckbox/SuperCheckbox.tsx","common/validation/EmailValidation.ts","common/validation/passwordValidation.ts","common/HeaderEnterApp/HeaderEnterApp.tsx","Login/Login.tsx","Registration/Registration.tsx"," PasswordRecovery/recovery-reducer.ts"," PasswordRecovery/PasswordRecovery.tsx","NikComponents/MyTextInput.tsx"," PasswordRecovery/NewPassword.tsx","Main/Routes/Routes.tsx","media/menu/menu.png","Main/Header/Header.tsx","Main/Main.tsx","app/App.tsx","reportWebVitals.ts","app/app-reducer.ts","Profile/profile-reducer.ts","state/store.ts","index.tsx"],"names":["module","exports","TestComponent","Error404","style","fontFamily","textAlign","fontSize","color","margin","instance","axios","create","withCredentials","baseURL","registrationAPI","email","password","post","loginAPI","rememberMe","delete","passwordRecoveryAPI","data","initialStateRegistration","isRegistration","loadingRequest","error","setRegistrationAC","type","payload","setServerErrorMessageRegistration","initialState","login","setIsLoggedIn","value","Profile","dispatch","useDispatch","useSelector","state","onClick","a","response","message","to","InputContainer","props","useState","showPassword","setShowPassword","className","s","emailPasswordContainer","inputTitle","title","typeInput","onChange","changeValue","placeholder","onBlur","alt","src","passwordControl","errorEmailPasswordMessage","errorMessage","Preloader","st","PreloaderContainer","loadingProgress","MainActionButton","blueBtn","actionClick","disabled","loadingStatus","disabledBtnSubmit","SuperCheckbox","onChangeChecked","children","spanClassName","restProps","finalInputClassName","checkbox","label","e","currentTarget","checked","emailValidation","test","PasswordValidation","HeaderEnterApp","logo","Login","setEmail","setPassword","setRememberMe","registration","serverErrorMessage","errorEmailMessage","setErrorEmailMessage","errorPasswordMessage","setErrorPasswordMessage","authPageContainer","emailPasswordLoginContainer","forgotPasswordBtn","btnFooterLoginContainer","errorMessageContainer","blueBtnContainer","setLogin","DifferentAccountBtn","footerBtn","Registration","checkPassword","setCheckPassword","useEffect","registrationContainer","inputFields","positionButtonAndError","button","btnCancel","window","history","go","setRegistration","initialRecoveryReducerState","success","setSuccessAC","newPassThunk","PasswordRecovery","setError","recovery","emailData","from","passwordRecoveryContainer","inputField","event","MyTextInput","onChangeText","onKeyPress","onEnter","errorClassName","variant","S","input","errorInput","finalErrorClassName","textInput","key","NewPassword","setRecovery","token","useParams","changePass","resetPasswordToken","PATH","Routes","path","exact","render","Header","header","link","activeClassName","active","menu","block","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app","action","profile","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.395ef9df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3H5IC\",\"active\":\"Header_active__2s9GK\",\"block\":\"Header_block__cGKH1\",\"header\":\"Header_header__1uxil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPageContainer\":\"Login_authPageContainer__3Z2RZ\",\"emailPasswordLoginContainer\":\"Login_emailPasswordLoginContainer__2yYh6\",\"forgotPasswordBtn\":\"Login_forgotPasswordBtn__20F6l\",\"btnFooterLoginContainer\":\"Login_btnFooterLoginContainer__2Fx1o\",\"errorMessageContainer\":\"Login_errorMessageContainer__2jDsd\",\"DifferentAccountBtn\":\"Login_DifferentAccountBtn__19dOT\",\"blueBtnContainer\":\"Login_blueBtnContainer__3AuTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Registration_registrationContainer__1XW4J\",\"inputFields\":\"Registration_inputFields__3xa_T\",\"passwordControl\":\"Registration_passwordControl__9Na5o\",\"button\":\"Registration_button__28IHL\",\"positionButtonAndError\":\"Registration_positionButtonAndError__3Zk70\",\"errorMessageContainer\":\"Registration_errorMessageContainer__1H6FG\",\"blueBtnContainer\":\"Registration_blueBtnContainer__3hlgi\",\"btnCancel\":\"Registration_btnCancel__1_tVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecoveryContainer\":\"PasswordRecovery_passwordRecoveryContainer__2J8M4\",\"inputField\":\"PasswordRecovery_inputField__2V_ko\",\"passwordControl\":\"PasswordRecovery_passwordControl__2vtSZ\",\"positionButtonAndError\":\"PasswordRecovery_positionButtonAndError__3tWeT\",\"blueBtnContainer\":\"PasswordRecovery_blueBtnContainer__17r-U\",\"footerBtn\":\"PasswordRecovery_footerBtn__1lQML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"MyTextInput_textInput__1T-lq\",\"input\":\"MyTextInput_input__CEmLU\",\"error\":\"MyTextInput_error__3mfdu\",\"errorInput\":\"MyTextInput_errorInput__nzR23\",\"standard\":\"MyTextInput_standard__1DGvu\",\"light\":\"MyTextInput_light__36Tqn\",\"dark\":\"MyTextInput_dark__1cF43\",\"purple\":\"MyTextInput_purple__1KqPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emailPasswordContainer\":\"InputContainer_emailPasswordContainer__24cun\",\"inputTitle\":\"InputContainer_inputTitle__3PeDF\",\"errorEmailPasswordMessage\":\"InputContainer_errorEmailPasswordMessage__3suHe\",\"passwordControl\":\"InputContainer_passwordControl__19EZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3Igik\",\"checkbox\":\"SuperCheckbox_checkbox__3bQhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blueBtn\":\"MainActionButton_blueBtn__3V7pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PreloaderContainer\":\"Preloader_PreloaderContainer__1RwO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"HeaderEnterApp_logo__3GTwM\"};","import React from \"react\";\r\n\r\nexport const TestComponent = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <h1 style={{fontFamily: 'Bell MT', textAlign: 'center', fontSize: '70px', color: 'black', margin: '220px'}}>\r\n                404: PAGE NOT\r\n                FOUND</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404","import axios from 'axios'\r\nimport {EmailDataType} from \"../ PasswordRecovery/PasswordRecovery\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n//API\r\n\r\nexport const registrationAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<RegistrationResponseType>('auth/register', {email, password})\r\n    }\r\n}\r\n\r\nexport const loginAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>('auth/me')\r\n    }\r\n}\r\n\r\nexport const passwordRecoveryAPI = {\r\n    forgot(data:EmailDataType) {\r\n        return instance.post<RecoveryResponseType>('auth/forgot', data)\r\n    },\r\n    recovery(data:RecoveryRequestType) {\r\n        return instance.post<RecoveryResponseType>('auth/set-new-password', data)\r\n    }\r\n}\r\n\r\n\r\n//=======TYPES=====\r\n\r\n//registrationAPI\r\ntype RegistrationResponseType = {\r\n    addedUser: addedUserType\r\n    error?: string\r\n}\r\ntype addedUserType = {\r\n    _id: string,\r\n    email: string,\r\n    rememberMe: boolean,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    verified: boolean,\r\n    publicCardPacksCount: 0,\r\n    created: string,\r\n    updated: string,\r\n    __v: number\r\n}\r\n\r\n//loginAPI\r\ntype LoginResponseType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    avatar?: string,\r\n    publicCardPacksCount: number,\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean,\r\n    rememberMe: boolean,\r\n    error?: string\r\n}\r\ntype LogoutResponseType = {\r\n    info: 'logOut success —ฅ/ᐠ.̫ .ᐟฅ—',\r\n    error: string\r\n}\r\n\r\n//recovery password API\r\ntype RecoveryResponseType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\n\r\nexport type RecoveryRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {AppThunkType} from \"../state/store\";\r\nimport {registrationAPI} from \"../api/api\";\r\n\r\nconst initialStateRegistration = {\r\n    isRegistration: false,\r\n    loadingRequest: false,\r\n    error: ''\r\n}\r\n\r\nexport const registrationReducer = (state: initialRegistrationType = initialStateRegistration, action: actionsRegistrationType): initialRegistrationType => {\r\n    switch (action.type) {\r\n        case 'REGISTRATION/SET-REGISTRATION':\r\n            return {...state, ...action.payload}\r\n        case 'REGISTRATION/LOADING-REQUEST':\r\n            return {...state, ...action.payload}\r\n        case 'LOGIN/INCORRECT-DATA-LOG-IN':\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actionCreator\r\nexport const setRegistrationAC = (isRegistration: boolean) => ({\r\n    type: 'REGISTRATION/SET-REGISTRATION', payload: {isRegistration}\r\n} as const)\r\nexport const loadingRequest = (loadingRequest: boolean) => ({\r\n    type: 'REGISTRATION/LOADING-REQUEST',\r\n    payload: {loadingRequest}\r\n} as const)\r\nexport const setServerErrorMessageRegistration = (error: string) => {\r\n    return {\r\n        type: 'LOGIN/INCORRECT-DATA-LOG-IN',\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n//thunkCreator\r\nexport const setRegistration = (email: string, password: string): AppThunkType => async (dispatch: Dispatch<actionsRegistrationType>) => {\r\n    dispatch(loadingRequest(true))\r\n\r\n    try {\r\n        await registrationAPI.register(email, password);\r\n        dispatch(setRegistrationAC(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setServerErrorMessageRegistration(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type initialRegistrationType = typeof initialStateRegistration\r\nexport type actionsRegistrationType = ReturnType<typeof setRegistrationAC>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof setServerErrorMessageRegistration>","import {\r\n    loadingRequest,\r\n    setServerErrorMessageRegistration\r\n} from '../Registration/registration-reducer';\r\nimport {loginAPI} from '../api/api';\r\nimport {AppThunkType} from \"../state/store\";\r\n\r\n\r\nconst initialState = {\r\n    login: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: actionsLoginType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'LOGIN/SET-LOGIN':\r\n            return {...state, login: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedIn = (value: boolean) =>\r\n    ({type: 'LOGIN/SET-LOGIN', value} as const)\r\n\r\n// thunks\r\nexport const setLogin = (email: string, password: string, rememberMe: boolean): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    try {\r\n        await loginAPI.login(email, password, rememberMe)\r\n        dispatch(setIsLoggedIn(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setServerErrorMessageRegistration(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    try {\r\n        await loginAPI.logout()\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(loadingRequest(false))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setServerErrorMessageRegistration(error))\r\n    }\r\n}\r\n\r\n// types\r\nexport type actionsLoginType = ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof setServerErrorMessageRegistration>\r\n","import React from \"react\";\r\nimport {logout} from '../Login/login-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from \"../state/store\";\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const login = useSelector<AppRootStateType, boolean>(state => state.login.login)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    if (!login) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>TEST</h1>\r\n            {login && <button onClick={logoutHandler}>Logout</button>}\r\n        </div>\r\n    )\r\n}","import s from \"./InputContainer.module.css\";\r\nimport React, {ChangeEvent, FocusEvent, useState} from \"react\";\r\n\r\ntype InputContainerPropsType = {\r\n    title?: string\r\n    value: string\r\n    changeValue: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    errorMessage?: string\r\n    typeInput: 'email' | 'password' | 'text'\r\n    placeholder?: string\r\n    onBlur?: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\nexport const InputContainer = (props: InputContainerPropsType) => {\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n\r\n    const typeShowInput = () => {\r\n        if (props.typeInput === 'password') {\r\n            return showPassword ? 'text' : 'password'\r\n        }\r\n        return props.typeInput\r\n    }\r\n\r\n    return (\r\n        <label className={s.emailPasswordContainer}>\r\n            <span className={s.inputTitle}>{props.title}</span>\r\n            <input\r\n                type={typeShowInput()}\r\n                value={props.value}\r\n                onChange={props.changeValue}\r\n                placeholder={props.placeholder}\r\n                onBlur={props.onBlur}\r\n            />\r\n            {props.typeInput === 'password'\r\n            &&\r\n            <img alt={'your password'}\r\n                 src={showPassword ? 'https://snipp.ru/demo/495/no-view.svg' : 'https://snipp.ru/demo/495/view.svg'}\r\n                 className={s.passwordControl} onClick={() => {setShowPassword(!showPassword)}}/>\r\n            }\r\n            <span className={s.errorEmailPasswordMessage}>{props.errorMessage}</span>\r\n        </label>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/loadingBtn.8c4b4840.svg\";","import React from \"react\";\r\nimport loadingProgress from '../../media/loadings/loadingBtn.svg'\r\nimport st from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={st.PreloaderContainer}>\r\n            <img alt={'preloader'} src={loadingProgress} />\r\n        </div>\r\n    )\r\n}","import s from \"./MainActionButton.module.css\";\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\ntype MainActionButton = {\r\n    actionClick: () => void\r\n    loadingStatus?: boolean\r\n    disabledBtnSubmit?: boolean\r\n    title: string\r\n}\r\n\r\nexport const MainActionButton = (props: MainActionButton) => {\r\n    return (\r\n        <button className={s.blueBtn}\r\n                onClick={props.actionClick}\r\n                disabled={props.loadingStatus || props.disabledBtnSubmit}>{props.loadingStatus ? <Preloader/> : props.title}</button>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","export const emailValidation = (value: string) => {\r\n    return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n}","export const PasswordValidation = (value: string) => {\r\n    return /[0-9a-zA-Z!@#$%^&*]{8,}/.test(value)\r\n}","import s from \"./HeaderEnterApp.module.css\";\r\nimport React from \"react\";\r\n\r\ntype HeaderEnterAppType = {\r\n    title?: string\r\n}\r\nexport const HeaderEnterApp = ({title}: HeaderEnterAppType) => {\r\n    return (\r\n        <div>\r\n            <div className={s.logo}>Learning cards</div>\r\n            <h2>{title}</h2>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {InputContainer} from '../common/InputContainer/InputContainer';\r\nimport {MainActionButton} from '../common/MainActionButton/MainActionButton';\r\nimport s from './Login.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperCheckbox from '../HomemadeInpButCheck/common/c3-SuperCheckbox/SuperCheckbox';\r\nimport {emailValidation} from '../common/validation/EmailValidation';\r\nimport {PasswordValidation} from '../common/validation/passwordValidation';\r\nimport {setLogin} from './login-reducer';\r\nimport {AppRootStateType} from \"../state/store\";\r\nimport {setServerErrorMessageRegistration} from \"../Registration/registration-reducer\";\r\nimport {HeaderEnterApp} from \"../common/HeaderEnterApp/HeaderEnterApp\";\r\nimport style from \"../ PasswordRecovery/PasswordRecovery.module.css\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const disabledBtnSubmit = !email || !password\r\n\r\n    const dispatch = useDispatch()\r\n    const login = useSelector<AppRootStateType, boolean>(state => state.login.login)\r\n    const loadingStatus = useSelector<AppRootStateType, boolean>(state => state.registration.loadingRequest)\r\n    const serverErrorMessage = useSelector<AppRootStateType, string>(state => state.registration.error)\r\n\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>('')\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>('')\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        setErrorEmailMessage('')\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(''))\r\n    }\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(''))\r\n        setErrorPasswordMessage('')\r\n    }\r\n\r\n    const onChangeRememberMe = () => {\r\n        setRememberMe(!rememberMe)\r\n    }\r\n\r\n    const onLogin = () => {\r\n        if (!emailValidation(email)) {\r\n            setErrorEmailMessage('Incorrect email')\r\n        } else if (!PasswordValidation(password)) {\r\n            setErrorPasswordMessage('Minimum 8 characters')\r\n        } else {\r\n            dispatch(setLogin(email, password, rememberMe))\r\n        }\r\n    }\r\n\r\n    if (login) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.authPageContainer}>\r\n            <HeaderEnterApp title={'Sign In'}/>\r\n\r\n            <div className={s.emailPasswordLoginContainer}>\r\n                <InputContainer\r\n                    title={'Email'}\r\n                    typeInput={'email'}\r\n                    value={email}\r\n                    changeValue={onChangeEmail}\r\n                    errorMessage={errorEmailMessage}\r\n                />\r\n                <InputContainer\r\n                    title={'Password'}\r\n                    typeInput={'password'}\r\n                    value={password}\r\n                    changeValue={onChangePassword}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n                <SuperCheckbox\r\n                    checked={rememberMe}\r\n                    onChangeChecked={onChangeRememberMe}>\r\n                    Remember Me\r\n                </SuperCheckbox>\r\n                <div className={s.forgotPasswordBtn}>\r\n                    <NavLink to=\"/password-recovery\">Forgot Password</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.btnFooterLoginContainer}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n                <div className={s.blueBtnContainer}>\r\n                    <MainActionButton actionClick={onLogin}\r\n                                      disabledBtnSubmit={disabledBtnSubmit}\r\n                                      title={'Login'}\r\n                                      loadingStatus={loadingStatus}\r\n                    />\r\n                </div>\r\n                <p className={s.DifferentAccountBtn}>Don't have an account</p>\r\n                <NavLink to=\"/registration\" className={style.footerBtn}>Sing Up</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './Registration.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setRegistration, setRegistrationAC, setServerErrorMessageRegistration} from \"./registration-reducer\";\r\nimport {emailValidation} from \"../common/validation/EmailValidation\";\r\nimport {PasswordValidation} from \"../common/validation/passwordValidation\";\r\nimport {AppRootStateType} from \"../state/store\";\r\nimport { InputContainer } from \"../common/InputContainer/InputContainer\";\r\nimport {MainActionButton} from \"../common/MainActionButton/MainActionButton\";\r\nimport {HeaderEnterApp} from \"../common/HeaderEnterApp/HeaderEnterApp\";\r\n\r\nexport const Registration = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [checkPassword, setCheckPassword] = useState<string>('')\r\n\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>('')\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>('')\r\n\r\n    const disabledBtnSubmit = !email || !password || !checkPassword\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppRootStateType, boolean>(state => state.registration.loadingRequest)\r\n    const isRegistration = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistration)\r\n    const serverErrorMessage = useSelector<AppRootStateType, string>(state => state.registration.error)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorEmailMessage('')\r\n        setEmail(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(''))\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorPasswordMessage('')\r\n        setPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(''))\r\n    }\r\n\r\n    const onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorPasswordMessage('')\r\n        setCheckPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(''))\r\n    }\r\n\r\n    const onRegistration = () => {\r\n        if (!emailValidation(email)) {\r\n            setErrorEmailMessage('Incorrect email')\r\n        } else if (!PasswordValidation(password)) {\r\n            setErrorPasswordMessage('Minimum 8 characters')\r\n        } else if (password !== checkPassword) {\r\n            setErrorPasswordMessage('Enter the same password')\r\n        } else {\r\n            dispatch(setRegistration(email, password))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setServerErrorMessageRegistration(''))\r\n            dispatch(setRegistrationAC(false))\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.go(-1);\r\n    }\r\n\r\n    return (\r\n        <div className={s.registrationContainer}>\r\n            <HeaderEnterApp title={'Sign Up'}/>\r\n            <div className={s.inputFields}>\r\n                <InputContainer\r\n                    title={'Email'}\r\n                    typeInput={'email'}\r\n                    value={email}\r\n                    changeValue={onChangeEmail}\r\n                    errorMessage={errorEmailMessage}\r\n                />\r\n                <InputContainer\r\n                    title={'Password'}\r\n                    typeInput={'password'}\r\n                    value={password}\r\n                    changeValue={onChangePassword}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n                <InputContainer\r\n                    title={'Confirm password'}\r\n                    typeInput={'password'}\r\n                    value={checkPassword}\r\n                    changeValue={onChangeCheckPassword}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.positionButtonAndError}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n\r\n                <div className={s.button}>\r\n                    <a className={s.btnCancel} onClick={goBack}>Cancel</a>\r\n                    <div className={s.blueBtnContainer}>\r\n                        <MainActionButton\r\n                            actionClick={onRegistration}\r\n                            disabledBtnSubmit={disabledBtnSubmit}\r\n                            title={'Register'}\r\n                            loadingStatus={loadingStatus}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {AppThunkType} from \"../state/store\";\r\nimport {passwordRecoveryAPI, RecoveryRequestType} from \"../api/api\";\r\nimport {EmailDataType} from \"./PasswordRecovery\";\r\n\r\nconst initialRecoveryReducerState = {\r\n    error: \"\",\r\n    success: false,\r\n}\r\n\r\n\r\nexport const recoveryReducer =\r\n    (state: InitialRecoveryReducerType = initialRecoveryReducerState, action: ActionRecoveryReducerTypes)\r\n        : InitialRecoveryReducerType => {\r\n        switch (action.type) {\r\n            case \"PASSWORD-RECOVERY/SUCCESS\" :\r\n                return {...state, ...action.payload}\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n//======ActionC=======\r\n\r\nexport const setSuccessAC = (success: boolean) => ({\r\n    type: \"PASSWORD-RECOVERY/SUCCESS\",\r\n    payload: {success}\r\n} as const)\r\n\r\n// const setFAC = (f: any) => ({\r\n//     type: \"AAA\",\r\n//     payload: {f}\r\n// } as const)\r\n\r\n\r\n//=======ThunkC=======\r\nexport const recoveryThunk = (data:EmailDataType): AppThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await passwordRecoveryAPI.forgot(data)\r\n            dispatch(setSuccessAC(true))\r\n        } catch (e) {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + `, more information in console`);\r\n\r\n            dispatch(setSuccessAC(false))\r\n        }\r\n\r\n\r\n    }\r\n\r\nexport const newPassThunk = (data:RecoveryRequestType): AppThunkType =>\r\n    async dispatch => {\r\n    try {\r\n        await passwordRecoveryAPI.recovery(data)\r\n    } catch(e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + `, more information in console`);\r\n    }\r\n    }\r\n//=======Types========\r\nexport type InitialRecoveryReducerType = typeof initialRecoveryReducerState\r\nexport type ActionRecoveryReducerTypes = ReturnType<typeof setSuccessAC>\r\n\r\n// function async(dispatch: any) {\r\n//     throw new Error(\"Function not implemented.\");\r\n// }\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport style from \"./PasswordRecovery.module.css\";\r\nimport {InputContainer} from \"../common/InputContainer/InputContainer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {MainActionButton} from \"../common/MainActionButton/MainActionButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { HeaderEnterApp } from \"../common/HeaderEnterApp/HeaderEnterApp\";\r\nimport {AppRootStateType} from \"../state/store\";\r\nimport {recoveryThunk, setSuccessAC} from \"./recovery-reducer\";\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [error, setError]= useState<string>(\"\")\r\n    const disabledBtnSubmit = !email\r\n\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppRootStateType, boolean>(state => state.recovery.success)\r\n\r\n    const inputEmail = (event:ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setEmail(event.currentTarget.value)\r\n\r\n    }\r\n    const emailData = {\r\n        email,\r\n        from: 'test-front-admin <ai73a@yandex.by>',\r\n        message: `<div style=\"background-color: lime; padding: 15px\">\r\n            password recovery link:\t<a href='http://localhost:3000/#/new-password/$token$'>link</a>\r\n            </div>`\r\n    }\r\n    const sendInstruction = () => {\r\n        dispatch(recoveryThunk(emailData))\r\n    }\r\n    useEffect(()=> {\r\n        return ()=>{\r\n            dispatch(setSuccessAC(false))\r\n        }\r\n\r\n    }, [])\r\n\r\n    if(success){\r\n        return <Redirect to={'/login/'}/> //заглушка пока\r\n    }\r\n\r\n    return (\r\n        <div className={style.passwordRecoveryContainer}>\r\n            <HeaderEnterApp title={'Forgot your password?'}/>\r\n            <div className={style.inputField}>\r\n                <InputContainer\r\n                    placeholder={'Email'}\r\n                    value={email}\r\n                    changeValue={inputEmail}\r\n                    errorMessage={error}\r\n                    typeInput={\"email\"}\r\n                />\r\n                <p>Enter your email address and we will send you further instructions</p>\r\n            </div>\r\n\r\n            <div className={style.positionButtonAndError}>\r\n\r\n                <MainActionButton\r\n                    actionClick={sendInstruction}\r\n                    disabledBtnSubmit={disabledBtnSubmit}\r\n                    title={\"Get Instructions\"}\r\n                    loadingStatus={false}\r\n                />\r\n                <p>Did you remember your password?</p>\r\n                <NavLink to=\"/login\" className={style.footerBtn}>Try again</NavLink>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport type EmailDataType = {\r\n    email:string\r\n    from: string\r\n    message: string\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport S from './MyTextInput.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    errorClassName?: string\r\n    variant?: \"light\" | \"dark\" | \"standard\" | \"purple\"\r\n}\r\n\r\nexport const MyTextInput: React.FC<SuperInputTextPropsType> = props => {\r\n    const {type = \"text\", onChange, onChangeText, onKeyPress, onEnter, error,\r\n        className, errorClassName, variant = \"light\", ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const finalInputClassName = `${S.input} ${variant && S[variant]} ${className} ${error && S.errorInput}`\r\n    const finalErrorClassName = `${S.error} ${errorClassName || ''}`\r\n\r\n    return (\r\n        <div className={S.textInput}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalErrorClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {newPassThunk} from \"./recovery-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {MyTextInput} from \"../NikComponents/MyTextInput\";\r\nimport {useParams} from \"react-router\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n    const [password, setPassword] = useState('')\r\n    const [recovery, setRecovery] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{token:string}>()// запомнить чит код доставания переменной из урла. Смотри роуты\r\n\r\n    const changePass = async () =>{\r\n        await dispatch(newPassThunk({password, resetPasswordToken:token}))\r\n        setRecovery(true)\r\n    }\r\n    if(recovery) {\r\n        return <Redirect to='/login/' />\r\n    }\r\n    return <>\r\n        <MyTextInput value={password} onChangeText={setPassword} placeholder={'Password'}/>\r\n        <button onClick={changePass}> change password</button>\r\n    </>\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from '../Error404';\r\nimport {Profile} from \"../../Profile/Profile\";\r\nimport {Login} from \"../../Login/Login\";\r\nimport {Registration} from \"../../Registration/Registration\";\r\nimport {PasswordRecovery} from \"../../ PasswordRecovery/PasswordRecovery\";\r\nimport { NewPassword } from '../../ PasswordRecovery/NewPassword';\r\n\r\n\r\n\r\nexport const PATH = {\r\n    PROFILE: '/profile',\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    TEST: '/test',\r\n    RECOVERY: '/password-recovery',\r\n    NEWPASS: '/new-password/:token',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.RECOVERY} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.NEWPASS} render={() => <NewPassword/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes","export default __webpack_public_path__ + \"static/media/menu.e6378079.png\";","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from \"./Header.module.css\"\r\nimport {PATH} from \"../Routes/Routes\";\r\nimport menu from \"../../media/menu/menu.png\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.PROFILE} className={s.link} activeClassName={s.active}>Profile</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={s.link} activeClassName={s.active}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTRATION} className={s.link} activeClassName={s.active}>Registration</NavLink>\r\n            <NavLink to={PATH.RECOVERY} className={s.link} activeClassName={s.active}>Password recovery</NavLink>\r\n            <div><img src={menu} className={s.block} alt={menu}/></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport Header from \"./Header/Header\";\r\nimport Routes from './Routes/Routes';\r\n\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport './App.css';\r\nimport {TestComponent} from \"../Test/Test\";\r\nimport Main from \"../Main/Main\";\r\n\r\n//Hello team! testing git branches..\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Main/>\r\n            <TestComponent/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initialState = {}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n    switch (1) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n    switch (1) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {appReducer} from \"../app/app-reducer\";\r\nimport {actionsLoginType, loginReducer} from '../Login/login-reducer';\r\nimport {ActionRecoveryReducerTypes, recoveryReducer} from \"../ PasswordRecovery/recovery-reducer\";\r\nimport {profileReducer} from \"../Profile/profile-reducer\";\r\nimport {actionsRegistrationType, registrationReducer} from \"../Registration/registration-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    recovery: recoveryReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\ntype AppActionsType = actionsRegistrationType | actionsLoginType | ActionRecoveryReducerTypes\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppRootStateType,\r\n    unknown,//экстра арг\r\n    AppActionsType>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./state/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}