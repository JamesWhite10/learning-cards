{"version":3,"sources":["HomemadeInpButCheck/common/c1-SuperInputText/SuperInputText.module.css","HomemadeInpButCheck/common/c2-SuperButton/SuperButton.module.css","HomemadeInpButCheck/common/c3-SuperCheckbox/SuperCheckbox.module.css","HomemadeInpButCheck/HomemadeInpButCheck.module.css","HomemadeInpButCheck/common/c1-SuperInputText/SuperInputText.tsx","HomemadeInpButCheck/common/c2-SuperButton/SuperButton.tsx","HomemadeInpButCheck/common/c3-SuperCheckbox/SuperCheckbox.tsx","HomemadeInpButCheck/HomemadeInpButCheck.tsx","Test/Test.tsx","Main/Error404.tsx","Profile/Profile.tsx","Login/Login.tsx","Registration/Registration.tsx","Main/Routes/Routes.tsx","Main/Header/Header.tsx","Main/Main.tsx","app/App.tsx","reportWebVitals.ts","app/app-reducer.ts"," PasswordRecovery/recovery-reducer.ts","Login/login-reducer.ts","Profile/profile-reducer.ts","Registration/registration-reducer.ts","NewPassword/password-reducer.ts","app/store.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HomemadeInpButCheck","useState","text","setText","showAlert","alert","setChecked","style","fontSize","column","blue","onClick","disabled","TestComponent","Error404","fontFamily","textAlign","color","margin","Profile","Login","Registration","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","block","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","app","state","recovery","login","profile","registration","newPassword","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.282b5900.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1KJQE\",\"superInput\":\"SuperInputText_superInput__aQo64\",\"errorInput\":\"SuperInputText_errorInput__o_GTn\",\"error\":\"SuperInputText_error__3GLkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Xnnt\",\"red\":\"SuperButton_red__wHJqN\",\"button\":\"SuperButton_button__39CUT\",\"blink\":\"SuperButton_blink__2EQzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3Igik\",\"checkbox\":\"SuperCheckbox_checkbox__3bQhH\",\"spanClassName\":\"SuperCheckbox_spanClassName__2v14t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HomemadeInpButCheck_blue__2v4Ik\",\"column\":\"HomemadeInpButCheck_column__SMRY6\",\"testSpanError\":\"HomemadeInpButCheck_testSpanError__IRrev\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HomemadeInpButCheck.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HomemadeInpButCheck() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            <div style={{fontSize: \"20px\"}}>Homemade Input Button Checkbox:</div>\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HomemadeInpButCheck\n","import React from \"react\";\r\nimport HomemadeInpButCheck from \"../HomemadeInpButCheck/HomemadeInpButCheck\";\r\n\r\nexport const TestComponent = () => {\r\n    return (\r\n        <div>\r\n            <HomemadeInpButCheck/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <h1 style={{fontFamily: 'Bell MT', textAlign: 'center', fontSize: '70px', color: 'black', margin: '220px'}}>\r\n                404: PAGE NOT\r\n                FOUND</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from '../Error404';\r\nimport {Profile} from \"../../Profile/Profile\";\r\nimport {Login} from \"../../Login/Login\";\r\nimport {Registration} from \"../../Registration/Registration\";\r\n\r\n\r\nexport const PATH = {\r\n    PROFILE: '/profile',\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from \"./Header.module.css\"\r\nimport {PATH} from \"../Routes/Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.PROFILE} className={s.link} activeClassName={s.active}>Profile</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={s.link} activeClassName={s.active}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTRATION} className={s.link} activeClassName={s.active}>Registration</NavLink>\r\n            <div className={s.block}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport Header from \"./Header/Header\";\r\nimport Routes from './Routes/Routes';\r\n\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.css';\nimport {TestComponent} from \"../Test/Test\";\nimport Main from \"../Main/Main\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Main/>\n            <TestComponent/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState = {}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n    switch (1) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const recoveryReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n    switch (1) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n    switch (1) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n    switch (1) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n    switch (1) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const passwordReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n    switch (1) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {recoveryReducer} from \"../ PasswordRecovery/recovery-reducer\";\r\nimport {loginReducer} from \"../Login/login-reducer\";\r\nimport {profileReducer} from \"../Profile/profile-reducer\";\r\nimport {registrationReducer} from \"../Registration/registration-reducer\";\r\nimport {passwordReducer} from \"../NewPassword/password-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    recovery: recoveryReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    newPassword: passwordReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./app/store\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}